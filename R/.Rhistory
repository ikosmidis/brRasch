document(); build();install()
?brRasch
document(); build();install()
document(); build();install()
document(); build();install()
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE)

     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE)

rm(brRasch)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE)

load_all()
load_all()
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE)

debug(hessfun)
Q
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE)

n
fit$penobj
Q
load_all()
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE)

Q
rm(list = ls())
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE)

fitML
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000)
fitML$coef
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L2")
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L2")
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L2")
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L2")
fit
fit$hessfun
dim(fit$hessfun)
dim(fit$penobj$hessfun)
npar
fit$penobj$hessfun
fit$betas
fit$penobj$hessfun
fit$penobj$gradfun
length(fit$penobj$gradfun)
I
I*dim
fit$penobj$gradfun
Q
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L2")
fit$penobj$gradfun
Q
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L2")
FITML
fitML
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L2")
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L2")
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L2")
fitML
fitML$coef
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L2")
fitML$coef
irf(fitML)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = TRUE, lambda = 1000, penalty = "L2")
irf(fitML)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = TRUE, lambda = 1000, penalty = "L2")
ird(fitML)
irf(fitML)
coef(fitML0
coef(fitML)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L2")
fitML$coef
-(betas < 1)
-(0.2 < 1)
-(1.2 < 1)
xx <-2; (xx > 1) -(xx < 1)
xx <--2; (xx > 1) -(xx < 1)
xx <-0; (xx > 1) -(xx < 1)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L1")
(bv > 1) - (bv < 1)
bv<1
bv<-c(0.1, 0.2, 1.2, 1.5)
(bv > 1) - (bv < 1)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L1")
fit$penobj
fit$penobj$gradfun
fit$betas
Q
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L1")
Q
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L1")
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L1")
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L1")
fit$penobj
fit$betas
fit$betas*lambda
abs(fit$betas - 1)*lambda
fit$betas*lambda
fit$betas*lambda
fit$penobj$loglikfun
fit$penobj$penfun
lambda*abs(c(fit$beta - 1))
Q
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L1", trace = TRUE)
abs(-1 - 1)
abs(1 - 1)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L1", trace = TRUE)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L1", trace = FALSE, fsmaxit = 10000)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 1e-06)
1 - (bv > 1)
1 - 2*(bv > 1)
bv
1 - 2*(bv < 1)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 1e-06)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0, trace = TRUE)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L1", trace = TRUE, fsmaxit = 10000, fsridge = 0)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L1", trace = TRUE, fsmaxit = 10000, fsridge = 0)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L1", trace = TRUE, fsmaxit = 10000, fsridge = 0)
sum(abs(bv - 1))
-lambda*(1 - 2*(bv < 1))
-(1 - 2*(bv < 1))
-(1 - 2*(bv < 1))
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L1", trace = TRUE, fsmaxit = 10000, fsridge = 0)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 0.1, penalty = "L1", trace = TRUE, fsmaxit = 10000, fsridge = 0)
coef(fitML)
     fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1, penalty = "L1", trace = TRUE, fsmaxit = 10000, fsridge = 0)
coef(fitML)
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 2, penalty = "L1", trace = TRUE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 3, penalty = "L1", trace = TRUE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 2, penalty = "L1", trace = TRUE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1, penalty = "L1", trace = TRUE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 0, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 0.1, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 0.2, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 0.3, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 2, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 3, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 5, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 100, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L1", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 1000, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 10000, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 100000, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 100000, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, lambda = 100000, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(lsatCompressed, constraints = constrc, br = FALSE, tuning = 100000, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   coef(  fitML <- brRasch(LSATCompressed, constraints = constrc, br = FALSE, tuning = 100000, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination")
   fitML <- brRasch(LSATCompressed, constraints = constrc, br = FALSE, tuning = 100000, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 0), what= "discrimination"
   fitML <- brRasch(LSATCompressed, constraints = constrc, br = FALSE, tuning = 100000, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 0)
   fitML <- brRasch(LSATCompressed, constraints = constrc, br = FALSE, tuning = 10, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 0)
   fitML <- brRasch(LSATCompressed, constraints = constrc, br = TRUE, tuning = 10, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 0)
   fitML <- brRasch(LSATCompressed, constraints = constrc, br = TRUE, tuning = 10, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 1e-07)
   fitML <- brRasch(LSATCompressed, constraints = constrc, br = TRUE, tuning = 10, penalty = "L2", trace = FALSE, fsmaxit = 10000, fsridge = 1e-03)
fitML$scores
   fitML <- brRasch(LSATCompressed, constraints = constrc, br = TRUE, tuning = 100, penalty = "L2", trace = TRUE, fsmaxit = 100, fsridge = 1e-03)
   fitML <- brRasch(LSATCompressed, constraints = constrc, br = TRUE, tuning = 100, penalty = "L2", trace = TRUE, fsmaxit = 100, fsridge = 1e-08)
   fitML <- brRasch(lsatCompressed, constraints = constrc, br = TRUE, tuning = 100, penalty = "L2", trace = TRUE, fsmaxit = 100, fsridge = 1e-08)
   fitML <- brRasch(LSATCompressed, constraints = constrc, br = TRUE, tuning = 100, penalty = "L2", trace = TRUE, fsmaxit = 100, fsridge = 1e-08)
   fitML <- brRasch(LSATCompressed, constraints = constrc, br = TRUE, tuning = 100, penalty = "L2", trace = TRUE, fsmaxit = 100, fsridge = 1e-08)
   fitML <- brRasch(LSATCompressed, constraints = constrc, br = TRUE, tuning = 100, penalty = "none", trace = TRUE, fsmaxit = 100, fsridge = 1e-08)
coef(fitML)
fitML0
coef(fitML0, what = "ability")
      fitBR1 <- brRasch(LSATdecompressed, constraints = constr, br = TRUE,
                      start = startBR, trace = 1)
fit$penobj
vcov
dim(vcov)
dim(vcovExt)
npar
n
n
      fitBR1 <- brRasch(LSATdecompressed, constraints = constr, br = TRUE,
                      start = startBR, trace = 1)
constrained
sum(constrained)
which(constrained)
dim(vcov)
dim(vcovExt)
dim(vcovExt[!constrained, !constrained])
vcovExt[!constrained, !constrained] <- vcov
is.data.frame(vcov)
is.data.frame(vcovExt)
aa <- vcovExt[!constrained, !constrained] 
dim(aa)
aa <- vcov
constrained
Q
      fitBR1 <- brRasch(LSATdecompressed, constraints = constr, br = TRUE,
                      start = startBR, trace = 1)
const
constr
      fitBR1 <- brRasch(LSATdecompressed, constraints = constr, br = TRUE,
                      start = startBR, trace = 1)
npar
Q
rm(list = ls())
document(); build();install()
document(); build();install()
      fitBR1 <- brRasch(LSATdecompressed, constraints = constr, br = TRUE,
                      start = startBR, trace = 1)
rm(list = ls())
      fitBR1 <- brRasch(LSATdecompressed, constraints = constr, br = TRUE,
                      start = startBR, trace = 1)
dim(vcovExt)
dim(vcov)
Q
rm(list =ls())
      fitBR1 <- brRasch(LSATdecompressed, constraints = constr, br = TRUE,
                      start = startBR, trace = 1)
document(); build();install()
rm(list = ls())
document(); build();install()
     fitBR1 <- brRasch(LSATdecompressed, constraints = constr, br = TRUE,
                       start = startBR, trace = 1, penalty = "L2")
     fitBR1 <- brRasch(LSATdecompressed, constraints = constr, br = TRUE,
                       start = startBR, trace = 1, penalty = "L2", tuning = 2)
     fitBR1 <- brRasch(LSATdecompressed, constraints = constr, br = TRUE,
                       start = startBR, trace = 1, penalty = "L2", tuning = 200)
plot(fitBR1)
irf(fitBR1)
document(); build();install()
document(); build();install()
document(); build();install()
document(); build(); install()
document(); build(); install()
?news
help.search("todo")
help.search("TODO")
document(); build(); install()
?brRasch
?brRasch
q()
document(); build(); install()
?brRasch
coef(fitMLL2, what = "discrimination")
fitML2
coef(fitMLL2, what = "discrimination")
coef(fitML)
coef(fitMLL2, what = "discrimination")
coef(fitML, what = "discrimination")
irf(fitMLL2)
irf(fitML0)
irf(fitMLL2)
coef(fitML0, what = "ability")
coef(fitMLglm)
coef(fitML0glm)
irf(fitML)
irf(fitML0)
sort(coef(fitML0, what = "ability"))
sort(coef(fitML0glm, what = "ability"))
irf(fitMLL2)
irf(update(fitMLL2, tuning = 0.1))
irf(update(fitMLL2, tuning = 0.2))
coef(update(fitMLL2, tuning = 0.2))
coef(update(fitMLL2, tuning = 200000))
IRF
lambda <- 100000
    IRF <- irf(update(fitMLL2, tuning = lambda))
    print(IRF + ggplot2::labs(title = bquote(lambda == .(lambda))))

fitMLL2 <- brRasch(LSATCompressed, constraints = constrc, br = FALSE,
                   penalty = "L2", tuning = 0.1)
document(); build(); install()
test()
librayr(brRasch)
?brRasch
q()
document(); build(); install()
?brRasch
compress
document(); build(); install()
aa <- compress(House2001m)
head(aa)
irf(fitBRHouse2001)
irf(fitBRHouse2001, ncol = )
irf(fitBRHouse2001, ncol = 2)
irf(fitBRHouse2001L2 <- update(fitBRHouse2001, penalty = "L2", tuning = 100), ncol = 4)
irf(fitBRHouse2001L2 <- update(fitBRHouse2001, penalty = "L2", tuning = 1000), ncol = 4)
1
1
1
1
-1
1
constr2
which(constr2$constrained)
document(); build(); install()
document(); build(); install()
     # Now get an intermediate fit between Rasch and 2PL by using L2
     # penalization on the difference of betas to 1 with tuning = 0.1
     fitMLL2 <- brRasch(lsatCompressed, constraints = constrc, br = FALSE,
                        penalty = "L2", tuning = 0.1)

fitML2
fitMLL2
coef(fitMLL2)
document(); build();install()
coef(update(fitML2, tuning = lambda))
coef(update(fitML2, tuning = 1000))
coef(update(fitMLL2, tuning = 1000))
coef(update(fitMLL2, tuning = 1000, penalty = "L2discr"))
coef(update(fitMLL2, tuning = 1000, penalty = "L2"))
coef(update(fitMLL2, tuning = 1000, penalty = "L2discr"))
document(); build();install()
q()
document(); build(); intall()
document(); build(); install()
library(brRasch)
?brRasch
     # Set the contrasts so that the first easiness and first
     # discrimination parameters are 0 and 1, respectively
     constrc <- setConstraintsRasch(data = lsatCompressed$data,
                                    dim = 1)
0
1
constrc
q()
                                    dim = 1)
document(); build(); install()
q()
?glm
getwd()
document()
?brRasch
install()
library(brRasch)
?beRasch
?brRasch
test_all()
test()
library(testthat)
test()
devtools::install_github("ikosmidis/brRasch")
?brRasch
load_all()
brRasch
q()
